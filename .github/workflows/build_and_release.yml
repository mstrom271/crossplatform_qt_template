name: Releases

on: 
  push:

jobs:
  build_windows_x86_64:
    runs-on: windows-latest
    permissions:
      contents: write
    env:
      BUILD_TYPE: Release
    steps:
      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          aqtversion: '==3.1.*'
          version: '6.5.1'
          host: 'windows'
          target: 'desktop'
          arch: 'win64_mingw'
          cache: 'true'
          cache-key-prefix: 'install-qt-action'
      - name: Install Conan
        id: conan
        uses: turtlebrowser/get-conan@main
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build
        shell: bash
        run: |
          ./build_and_deploy.sh OS=Windows BUILD_TYPE=${{ env.BUILD_TYPE }} QT_ROOT=../Qt/6.5.1
          mv ./build/${{ env.BUILD_TYPE }}/TEST_PROJECT.exe ./build/${{ env.BUILD_TYPE }}/TEST_PROJECT_win_x86_64_${{ env.BUILD_TYPE }}.exe
          TAG=$(echo ${{ github.ref }} | sed 's/^refs\/tags\///')_windows
          echo "TAG=$TAG" >> $GITHUB_ENV
      - name: Release
        uses: ncipollo/release-action@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          artifacts: "./build/${{ env.BUILD_TYPE }}/TEST_PROJECT_win_x86_64_${{ env.BUILD_TYPE }}.exe"
          tag: ${{ env.TAG }}


  build_linux_x86_64:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      BUILD_TYPE: Release
    steps:
      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          aqtversion: '==3.1.*'
          version: '6.5.1'
          host: 'linux'
          target: 'desktop'
          arch: 'gcc_64'
          cache: 'true'
          cache-key-prefix: 'install-qt-action'
      - name: Install Conan
        id: conan
        uses: turtlebrowser/get-conan@main
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build
        shell: bash
        run: |
          ./build_and_deploy.sh OS=Linux BUILD_TYPE=${{ env.BUILD_TYPE }} QT_ROOT=../Qt/6.5.1
          mv ./build/${{ env.BUILD_TYPE }}/TEST_PROJECT ./build/${{ env.BUILD_TYPE }}/TEST_PROJECT_lin_x86_64_${{ env.BUILD_TYPE }}
          TAG=$(echo ${{ github.ref }} | sed 's/^refs\/tags\///')_linux
          echo "TAG=$TAG" >> $GITHUB_ENV
      - name: Release
        uses: ncipollo/release-action@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          artifacts: "./build/${{ env.BUILD_TYPE }}/TEST_PROJECT_lin_x86_64_${{ env.BUILD_TYPE }}"
          tag: ${{ env.TAG }}




# jobs:
#   build_test
#     runs-on: windows-latest
#     permissions:
#       contents: write
#     env:
#       BUILD_TYPE: Release
#     steps:
#       - name: Build
#         shell: bash
#         run: |
#           echo Hello >> ${{ env.BUILD_TYPE }}_1.txt
#           echo World >> ${{ env.BUILD_TYPE }}_2.txt
#       - name: Set Tag Name
#         shell: bash
#         run: |
#           TAG=$(echo ${{ github.ref }} | sed 's/^refs\/tags\///')_windows
#           echo "TAG=$TAG" >> $GITHUB_ENV
#       - name: Release
#         uses: ncipollo/release-action@v1
#         if: startsWith(github.ref, 'refs/tags/')
#         with:
#           artifacts: "${{ env.BUILD_TYPE }}_1.txt, ${{ env.BUILD_TYPE }}_2.txt"
#           tag: ${{ env.TAG }}